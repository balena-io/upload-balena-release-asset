"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validate = exports.nativeNames = exports.nativeFactTypes = exports.fetchProcessing = exports.types = void 0;
const TypeUtils = require("../type-utils");
exports.types = {
    postgres: 'TIMESTAMP',
    mysql: 'TIMESTAMP',
    websql: 'INTEGER',
    odata: {
        name: 'Edm.DateTime',
    },
};
const fetchProcessing = (data) => {
    if (data == null) {
        return data;
    }
    let date;
    if (data instanceof Date) {
        date = data;
    }
    else if (typeof data === 'string' || typeof data === 'number') {
        date = new Date(data);
    }
    else {
        throw new Error('Fetched date time is not valid: ' + typeof data);
    }
    return date.toISOString();
};
exports.fetchProcessing = fetchProcessing;
exports.nativeFactTypes = {
    'Date Time': {
        ...TypeUtils.nativeFactTypeTemplates.equality,
        'is before': (from, to) => ['LessThan', from, to],
    },
};
exports.nativeNames = {
    'Current Time': ['CurrentTimestamp'],
};
exports.validate = TypeUtils.validate.date;
//# sourceMappingURL=date-time.js.map