import type * as BalenaSdk from '..';
import type { InjectedDependenciesParam, PinePostResult, Team } from '..';
declare const getTeamModel: (deps: InjectedDependenciesParam) => {
    create: (organizationSlugOrId: string | number, name: string) => Promise<PinePostResult<Team>>;
    getAllByOrganization: (organizationSlugOrId: string | number, options?: BalenaSdk.PineOptions<BalenaSdk.Team>) => Promise<BalenaSdk.Team[]>;
    get: (teamId: number, options?: BalenaSdk.PineOptions<BalenaSdk.Team>) => Promise<BalenaSdk.Team>;
    rename: (teamId: number, newTeamName: string) => Promise<void>;
    remove: (teamId: number) => Promise<void>;
    /**
     * @namespace balena.models.team.applicationAccess
     * @memberof balena.models.team
     */
    applicationAccess: {
        getAllByTeam: (teamId: number, options?: BalenaSdk.PineOptions<BalenaSdk.TeamApplicationAccess>) => Promise<BalenaSdk.TeamApplicationAccess[]>;
        get: (teamApplicationAccessId: number, options?: BalenaSdk.PineOptions<BalenaSdk.TeamApplicationAccess>) => Promise<BalenaSdk.TeamApplicationAccess | undefined>;
        add: (teamId: number, applicationIdOrSlug: number | string, roleName: BalenaSdk.ApplicationMembershipRoles) => Promise<BalenaSdk.TeamApplicationAccess>;
        update: (teamApplicationAccessId: number, roleName: BalenaSdk.ApplicationMembershipRoles) => Promise<void>;
        remove: (teamApplicationAccessId: number) => Promise<void>;
    };
};
export default getTeamModel;
