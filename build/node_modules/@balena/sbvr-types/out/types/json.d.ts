import * as TypeUtils from '../type-utils';
export declare const types: {
    postgres: string;
    mysql: string;
    websql: string;
    odata: {
        name: string;
    };
};
type JSON = string | number | boolean | null | JSON[] | {
    [key: string]: JSON;
};
type JSONable = string | number | boolean | null | undefined | JSONable[] | {
    [key: string]: JSONable;
} | {
    toJSON(): JSONable;
};
export type Types = TypeUtils.TsTypes<{
    [key: string]: JSON;
} | JSON[], {
    [key: string]: JSONable;
} | JSONable[]>;
type DbWriteType = string;
export declare const fetchProcessing: TypeUtils.FetchProcessing<Types['Read']>;
export declare const validate: TypeUtils.Validate<Types['Write'], DbWriteType>;
export {};
