"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validate = exports.types = void 0;
const TypeUtils = require("../type-utils");
exports.types = {
    postgres: 'BYTEA',
    mysql: 'BLOB',
    websql: 'BLOB',
    odata: {
        name: 'Edm.String',
    },
};
exports.validate = TypeUtils.validate.checkRequired((value) => {
    if (Buffer.isBuffer(value)) {
        return value;
    }
    if (typeof value !== 'string') {
        throw new Error(`could not be converted to binary: ${typeof value}`);
    }
    if (value.length % 2 !== 0) {
        throw new Error('could not be converted to binary: hex string must have an even length');
    }
    if (!/^[a-fA-F0-9]*$/.test(value)) {
        throw new Error('could not be converted to binary: hex string must contain only hex characters');
    }
    try {
        return Buffer.from(value, 'hex');
    }
    catch (e) {
        throw new Error(`could not be converted to binary: ${e.message}`);
    }
});
//# sourceMappingURL=file.js.map