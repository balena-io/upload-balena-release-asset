"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.validate = exports.nativeFactTypes = exports.fetchProcessing = exports.types = void 0;
const TypeUtils = require("../type-utils");
exports.types = {
    postgres: 'BIGINT',
    mysql: 'BIGINT',
    websql: 'BIGINT',
    odata: {
        name: 'Edm.Int64',
    },
};
const fetchProcessing = (data) => {
    if (data == null) {
        return data;
    }
    let value;
    if (typeof data === 'string') {
        value = data;
    }
    else if (typeof data === 'bigint' || typeof data === 'number') {
        value = data.toString();
    }
    else {
        throw new Error('Fetched bigint is not valid: ' + typeof data);
    }
    return value;
};
exports.fetchProcessing = fetchProcessing;
exports.nativeFactTypes = {
    Integer: TypeUtils.nativeFactTypeTemplates.comparison,
    Real: TypeUtils.nativeFactTypeTemplates.comparison,
};
exports.validate = TypeUtils.validate.bigint;
//# sourceMappingURL=big-integer.js.map